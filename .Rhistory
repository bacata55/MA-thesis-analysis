points(coefs, y.axis+2*adjust,pch=21,cex=.8, bg="white")
library(ggplot2)
plot(coefs, y.axis, type = "p", axes = F, xlab = "", ylab = "", pch = 19, cex = .8,
xlim=c(min,max),ylim = c(.5,6.5), main = "")
rect(min,.5,max,1.5, col = c("grey97"), border="grey90", lty = 2)
rect(min,1.5,max,2.5, col = c("grey95"), border="grey90", lty = 2)
rect(min,2.5,max,3.5, col = c("grey97"), border="grey90", lty = 2)
rect(min,3.5,max,4.5, col = c("grey95"), border="grey90", lty = 2)
rect(min,4.5,max,5.5, col = c("grey97"), border="grey90", lty = 2)
#rect(min,5.5,max,6.5, col = c("grey97"), border="grey90", lty = 2)
axis(1, at = seq(min,max,(max-min)/10),
labels = c(round(min+0*((max-min)/10),3),
round(min+1*((max-min)/10),3),
round(min+2*((max-min)/10),3),
round(min+3*((max-min)/10),3),
round(min+4*((max-min)/10),3),
round(min+5*((max-min)/10),3),
round(min+6*((max-min)/10),3),
round(min+7*((max-min)/10),3),
round(min+8*((max-min)/10),3),
round(min+9*((max-min)/10),3),
round(max,3)),tick = T,cex.axis = .75, mgp = c(2,.7,0))
axis(2, at = y.axis, label = var.names, las = 1, tick = FALSE, cex.axis =.8)
abline(h = y.axis, lty = 2, lwd = .5, col = "white")
segments(coefs-qnorm(.975)*ses, y.axis+2*adjust, coefs+qnorm(.975)*ses, y.axis+2*adjust, lwd =  1)
segments(coefs-qnorm(.95)*ses, y.axis+2*adjust-.035, coefs-qnorm(.95)*ses, y.axis+2*adjust+.035, lwd = .9)
segments(coefs+qnorm(.95)*ses, y.axis+2*adjust-.035, coefs+qnorm(.95)*ses, y.axis+2*adjust+.035, lwd = .9)
points(coefs, y.axis+2*adjust,pch=21,cex=.8, bg="white")
table(df$year)
aggregate(df$read_FRE, by=list(df$year), FUN=mean)
coefs<-party_means
ses<-party_ses
y.axis <- c(1:6)
min <- min(coefs - 2*ses)
max <- max(coefs + 2*ses)
var.names <- colnames(party_FRE)
adjust <- 0
par(mar=c(2,8,2,2))
plot(coefs, y.axis, type = "p", axes = F, xlab = "", ylab = "", pch = 19, cex = .8,
xlim=c(min,max),ylim = c(.5,6.5), main = "")
rect(min,.5,max,1.5, col = c("grey97"), border="grey90", lty = 2)
rect(min,1.5,max,2.5, col = c("grey95"), border="grey90", lty = 2)
rect(min,2.5,max,3.5, col = c("grey97"), border="grey90", lty = 2)
rect(min,3.5,max,4.5, col = c("grey95"), border="grey90", lty = 2)
rect(min,4.5,max,5.5, col = c("grey97"), border="grey90", lty = 2)
rect(min,5.5,max,6.5, col = c("grey97"), border="grey90", lty = 2)
axis(1, at = seq(min,max,(max-min)/10),
labels = c(round(min+0*((max-min)/10),3),
round(min+1*((max-min)/10),3),
round(min+2*((max-min)/10),3),
round(min+3*((max-min)/10),3),
round(min+4*((max-min)/10),3),
round(min+5*((max-min)/10),3),
round(min+6*((max-min)/10),3),
round(min+7*((max-min)/10),3),
round(min+8*((max-min)/10),3),
round(min+9*((max-min)/10),3),
round(max,3)),tick = T,cex.axis = .75, mgp = c(2,.7,0))
axis(2, at = y.axis, label = var.names, las = 1, tick = FALSE, cex.axis =.8)
abline(h = y.axis, lty = 2, lwd = .5, col = "white")
segments(coefs-qnorm(.975)*ses, y.axis+2*adjust, coefs+qnorm(.975)*ses, y.axis+2*adjust, lwd =  1)
segments(coefs-qnorm(.95)*ses, y.axis+2*adjust-.035, coefs-qnorm(.95)*ses, y.axis+2*adjust+.035, lwd = .9)
segments(coefs+qnorm(.95)*ses, y.axis+2*adjust-.035, coefs+qnorm(.95)*ses, y.axis+2*adjust+.035, lwd = .9)
points(coefs, y.axis+2*adjust,pch=21,cex=.8, bg="white")
##real world data
table(df$party)
aggregate(df$read_FRE, by=list(df$party), FUN=mean)
df$
browseVignettes(package = "dplyr")
0.1*9
rm(list=ls())
setwd("/Users/lesliehuang/Dropbox/MA-thesis-analysis/")
libraries <- c("foreign", "utils", "stargazer", "dplyr", "devtools", "quanteda", "quantedaData", "ggplot2", "stringr", "LIWCalike", "topicmodels", "lda", "stm", "LDAvis", "austin", "forecast", "lmtest", "strucchange", "vars", "tseries", "urca")
lapply(libraries, require, character.only=TRUE)
# get LIWC dict
spanish_dict <- dictionary(file = "../LIWC/Spanish_LIWC2007_Dictionary.dic", format = "LIWC")
# some major dates for plotting
major_violence <- as.Date(c("7/20/13", "1/16/13", "7/29/14", "11/16/14", "4/15/15", "5/31/15", "6/15/15", "6/22/15"), "%m/%d/%y")
major_agree <- as.Date(c("8/26/12", "5/26/13", "11/6/13", "5/16/14", "3/7/15", "6/2/15", "9/23/15"), "%m/%d/%y")
cf_start <- as.Date(c("11/20/12", "12/15/13", "5/16/14", "12/20/14", "7/20/15"), "%m/%d/%y")
cf_end <- as.Date(c("1/20/13", "1/15/14", "5/28/14", "5/22/15", "1/1/16"), "%m/%d/%y")
ceasefires <- data.frame(start = as.Date(c("11/20/12", "12/15/13", "5/16/14", "12/20/14", "7/20/15"), "%m/%d/%y"), end = as.Date(c("1/20/13", "1/15/14", "5/28/14", "5/22/15", "1/1/16"), "%m/%d/%y"))
# dataframe of all dates
dates <- rbind(data.frame(date = major_violence, group = "major_viol"), data.frame(date = major_agree, group = "major_agree"))
FARC <- read.csv("../MA-datasets/FARC_communiques.csv", stringsAsFactors = FALSE)
FARC_meta <- select(FARC, date)
FARC_meta <- dplyr::select(FARC, date)
FARC_dates <- as.Date(FARC_meta[[1]], "%Y-%m-%d")
liwc_FARC <- liwcalike(FARC$text, spanish_dict)
FARC_neg <- data.frame(cbind(FARC_dates, as.numeric(liwc_FARC$EmoNeg)))
FARC_neg$FARC_dates <- as.Date(FARC_dates, origin = "1970-01-01")
FARC_pos <- data.frame(cbind(FARC_dates, as.numeric(liwc_FARC$EmoNeg)))
FARC_pos$FARC_dates <- as.Date(FARC_dates, origin = "1970-01-01")
loess_F_neg <- loess(FARC_neg$V2 ~ as.numeric(FARC_dates), control=loess.control(surface="direct"))
loess_F_pos <- loess(FARC_pos$V2 ~ as.numeric(FARC_dates), control=loess.control(surface="direct"))
FARC_pos$V2 <- loess_F_pos$y
FARC_neg$V2 <- loess_F_neg$y
joint <- read.csv("../MA-datasets/jointstatements.csv", stringsAsFactors = FALSE)
# delete some empty documents
joint <- filter(joint, text != "")
joint <- slice(joint, -19)
# get metadata: dates
joint_meta <- dplyr::select(joint, date)
joint_dates <- as.Date(joint_meta[[1]], "%Y-%m-%d")
# run LIWC
liwc_joint <- liwcalike(joint$text, spanish_dict)
# get neg and pos emotion
joint_neg <- as.data.frame(cbind(joint_dates, as.numeric(liwc_joint$EmoNeg)))
joint_neg$joint_dates <- as.Date(joint_neg$joint_dates, origin = "1970-01-01")
joint_pos <- as.data.frame(cbind(joint_dates, as.numeric(liwc_joint$EmoPos)))
joint_pos$joint_dates <- as.Date(joint_neg$joint_dates, origin = "1970-01-01")
loess_joint_neg <- loess(joint_neg$V2 ~ as.numeric(joint_dates), control=loess.control(surface="direct"))
loess_joint_pos <- loess(joint_pos$V2 ~ as.numeric(joint_dates), control=loess.control(surface="direct"))
joint_neg$V2 <- loess_joint_neg$y
joint_pos$V2 <- loess_joint_pos$y
govt <- read.csv("govtstatements.csv", stringsAsFactors = FALSE)
govt_meta <- dplyr::select(govt, date)
govt_dates <- as.Date(govt_meta[[1]], "%Y-%m-%d")
# run LIWC
liwc_govt <- liwcalike(govt$text, spanish_dict)
govt_neg <- as.data.frame(cbind(govt_dates, as.numeric(liwc_govt$EmoNeg)))
govt_neg$govt_dates <- as.Date(govt_neg$govt_dates, origin = "1970-01-01")
govt_pos <- as.data.frame(cbind(govt_dates, as.numeric(liwc_govt$EmoPos)))
govt_pos$govt_dates <- as.Date(govt_pos$govt_dates, origin = "1970-01-01")
# use lowess
# lowess_govt_neg <- lowess(govt_dates, y = govt_neg$V2, f = 2/3, iter = 3, delta = 0.01 * diff(range(govt_dates)))
#
# lowess_govt_pos <- lowess(govt_dates, y = govt_pos$V2, f = 2/3, iter = 3, delta = 0.01 * diff(range(govt_dates)))
loess_govt_neg <- loess(govt_neg$V2 ~ as.numeric(govt_dates), control=loess.control(surface="direct"))
loess_govt_pos <- loess(govt_pos$V2 ~ as.numeric(govt_dates), control=loess.control(surface="direct"))
govt_neg$V2 <- loess_govt_neg$y
govt_pos$V2 <- loess_govt_pos$y
# let's impute some values using loess
# first, gather all the dates we need
all_dates <- as.numeric(c(joint_dates, FARC_dates, govt_dates))
# predict data using loess
pred_F_neg <- predict(loess_F_neg, newdata = all_dates)
pred_govt_neg <- predict(loess_govt_neg, newdata = all_dates)
pred_joint_neg <- predict(loess_joint_neg, newdata = all_dates)
# linear model now
neg_lm <- lm(pred_joint_neg ~ pred_F_neg + pred_govt_neg)
# let's run the augmented Dickey-Fuller test anyway, to confirm non-stationarity
adf.test(pred_F_neg)
adf.test(pred_govt_neg)
adf.test(pred_joint_neg)
summary(ur.df(y = pred_F_neg, type = "trend", lags = 1))
summary(ur.df(y = pred_F_neg, type = "drift", lags = 1))
summary(ur.df(y = pred_F_neg, type = "none", lags = 1))
summary(ur.df(y = pred_govt_neg, type = "trend", lags = 1))
summary(ur.df(y = pred_govt_neg, type = "drift", lags = 1))
summary(ur.df(y = pred_govt_neg, type = "none", lags = 1))
summary(ur.df(y = pred_F_neg, type = "trend", lags = 1)) # unit root, trend, and drift
summary(ur.df(y = pred_govt_neg, type = "trend", lags = 1)) # unit root, trend, and drift
summary(ur.df(y = pred_joint_neg, type = "trend", lags = 1))
ur.kpss(pred_F_neg)
kpss.test(pred_F_neg, null = "L") # result is stationary, p  < 0.01, same for Trend or Level
kpss.test(pred_F_neg, null = "T") # result is stationary, p = 0.02, same for Trend or Level
kpss.test(pred_govt_neg, null = "T") # non stationary, p > 0.1, same for Trend or Level
kpss.test(pred_joint_neg, null = "T") # non stationary, p > 0.1 for Level, p = 0.03 for Trend
x <- rnorm(1000)  # is level stationary
kpss.test(x)
y <- cumsum(x)  # has unit root
kpss.test(y)
x <- 0.3*(1:1000)+rnorm(1000)  # is trend stationary
kpss.test(x, null = "Trend")
kpss.test(pred_F_neg, null = "T") # result is stationary, p = 0.02, same for Trend or Level
set.seed(1234)
kpss.test(pred_F_neg, null = "T") # not trend stationary, p = 0.02
kpss.test(pred_govt_neg, null = "T") # trend stationary, p > 0.1
kpss.test(pred_joint_neg, null = "T") # trend stationary, p > 0.1
d_F_neg <- diff(pred_F_neg)
d_govt_neg <- diff(pred_govt_neg)
d_joint_neg <- diff(pred_joint_neg)
grangertest(d_joint_neg ~ d_F_neg + d_govt_neg)
grangertest(d_joint_neg ~ d_F_neg)
ur.df(d_F_neg)
summary(ur.df(d_F_neg))
plot(d_F_neg)
plot(d_govt_neg)
plot(d_joint_neg)
breakpoints(d_F_neg)
breakpoints(pred_F_neg)
breakpoints(pred_F_neg ~ 1)
breakpoints(pred_F_neg ~ 1, breaks = 10)
breakpoints(pred_F_neg ~ 1, breaks = 5)
breakpoints(pred_joint_neg ~ pred_F_neg, breaks = 5)
all_dates <- sort(as.numeric(c(joint_dates, FARC_dates, govt_dates)))
pred_F_neg <- predict(loess_F_neg, newdata = all_dates)
pred_govt_neg <- predict(loess_govt_neg, newdata = all_dates)
pred_joint_neg <- predict(loess_joint_neg, newdata = all_dates)
pred_joint_neg
all_dates
length(all_dates)
alldates[430]
all_dates[430]
duplicated(all_dates)
unique(all_dates)
all_dates <- unique(sort(as.numeric(c(joint_dates, FARC_dates, govt_dates))))
pred_F_neg <- predict(loess_F_neg, newdata = all_dates)
pred_govt_neg <- predict(loess_govt_neg, newdata = all_dates)
pred_joint_neg <- predict(loess_joint_neg, newdata = all_dates)
pred_joint_neg
pred_govt_neg
pred_F_neg
neg_lm <- lm(pred_joint_neg ~ pred_F_neg + pred_govt_neg)
neg_lm
adf.test(pred_F_neg) # p = 0.07
adf.test(pred_govt_neg) # p < 0.01
adf.test(pred_joint_neg) # p < 0.01
adf.test(pred_F_neg) # DF = 0.73, p = 0.8
adf.test(pred_govt_neg) # p < 0.01
summary(ur.df(y = pred_F_neg, type = "trend", lags = 1)) # Cannot reject the hypothesis that there is unit root, trend, and drift
summary(ur.df(y = pred_F_neg, type = "drift", lags = 1))
summary(ur.df(y = pred_F_neg, type = "none", lags = 1))
summary(ur.df(y = pred_F_neg, type = "none", lags = 1))
summary(ur.df(y = pred_F_neg, type = "drift", lags = 1))
summary(ur.df(y = pred_F_neg, type = "trend", lags = 1))
summary(ur.df(y = pred_F_neg, type = "trend", lags = 1))
summary(ur.df(y = pred_F_neg, type = "none", lags = 1)) # there is a unit root
summary(ur.df(y = pred_govt_neg, type = "trend", lags = 1)) # Cannot reject the hypothesis that there is unit root, trend, and drift
summary(ur.df(y = pred_govt_neg, type = "drift", lags = 1))
summary(ur.df(y = pred_govt_neg, type = "none", lags = 1))
summary(ur.df(y = pred_joint_neg, type = "trend", lags = 1)) # Again, cannot reject the hypothesis that there is unit root, trend, and drift
summary(ur.df(y = pred_joint_neg, type = "drift", lags = 1))
summary(ur.df(y = pred_joint_neg, type = "none", lags = 1))
summary(ur.df(y = pred_joint_neg, type = "drift", lags = 1))
summary(ur.df(y = pred_joint_neg, type = "trend", lags = 1))
ur.kpss(pred_F_neg)
kpss.test(pred_F_neg, null = "T") # not trend stationary, p < 0.01
kpss.test(pred_govt_neg, null = "T") # trend stationary, p > 0.1
kpss.test(pred_joint_neg, null = "T") # trend stationary, p > 0.1
kpss.test(pred_F_neg, null = "L") # not trend stationary, p < 0.01
summary(ur.df(y = pred_F_neg, type = "trend", lags = 1)) # can't reject null
summary(ur.df(y = pred_govt_neg, type = "trend", lags = 1)) # there is trend and drift
summary(ur.df(y = pred_govt_neg, type = "trend", lags = 1)) # there is trend and drift
d_F_neg <- diff(pred_F_neg, 1)
d_govt_neg <- diff(pred_govt_neg, 1)
d_joint_neg <- diff(pred_joint_neg, 1)
adf.test(d_F_neg)
summary(ur.df(y = d_F_neg, type = "trend", lags = 1))
kpss.test(pred_F_neg, null = "T")
kpss.test(pred_F_neg, null = "L")
kpss.test(pred_F_neg, null = "T") # not trend stationary, p < 0.01
kpss.test(pred_govt_neg, null = "L") # hmm... still non stationary
kpss.test(pred_joint_neg, null = "L") # hmm... still non stationary
kpss.test(pred_joint_neg, null = "T") # hmm... still non stationary
kpss.test(pred_joint_neg, null = "L") # p > 0.1, can't reject null of level stationarity
kpss.test(d_F_neg, null = "L") # hmm... still non stationary
kpss.test(d_govt_neg, null = "L") # p > 0.1, can't reject null of level stationarity
kpss.test(d_joint_neg, null = "L") # p > 0.1, can't reject null of level stationarity
kpss.test(d_joint_neg, null = "T") # p > 0.1, can't reject null of level stationarity
kpss.test(d_govt_neg, null = "T") # p > 0.1, can't reject null of level stationarity
kpss.test(d_govt_neg)
ndiffs(pred_govt_neg)
ndiffs(d_govt_neg)
ndiffs(pred_F_neg)
ndiffs(pred_joint_neg)
breakpoints(pred_F_neg)
breakpoints(pred_F_neg ~ 1)
breakpoints(pred_govt_neg ~ 1)
breakpoints(pred_joint_neg ~ 1)
breakpoints(pred_F_neg ~ 1)
bpts <- breakpoints(pred_F_neg ~ 1)
bpts$breakpoints
bpts$breakpoints[1]
all_dates[48]
as.Date(all_dates[48])
bpts_dates <- NA
bpts_dates.append(1)
append(bpts_dates, 1)
append(bpts_dates, 1, after = 0)
append(bpts_dates, 1, after = 1)
bpts_dates <- vector(mode = "Date", length = 0)
bpts_dates
break_dates <- vector(mode = "Date", length = 0)
break_dates <- vector(mode = "numeric", length = 0)
break_dates
for (i in 1:length(bpts$breakpoints) {
append(bpts, all_dates[bpts$breakpoints[i]]))
}
for (i in 1:length(bpts$breakpoints)) {
append(bpts, all_dates[bpts$breakpoints[i]]))
}
for (i in 1:length(bpts$breakpoints)) {
append(bpts, all_dates[bpts$breakpoints[i]])
}
bpts
break_dates
bpts <- breakpoints(pred_F_neg ~ 1)
break_dates <- vector(mode = "numeric", length = 0)
for (i in 1:length(bpts$breakpoints)) {
append(break_dates, all_dates[bpts$breakpoints[i]])
}
break_dates
append(break_dates, 3)
break_dates
break_dates <- vector(mode = "numeric", length = 4)
break_dates <- vector(mode = "numeric", length = length(bpts$breakpoints))
for (i in 1:length(bpts$breakpoints)) {
append(break_dates, all_dates[bpts$breakpoints[i]])
}
break_dates
length(bpts$breakpoints)
break_dates <- vector(mode = "numeric", length = length(bpts$breakpoints))
break_dates
break_dates[i] <- all_dates[bpts$breakpoints[i]])
for (i in 1:length(bpts$breakpoints)) {
break_dates[i] <- all_dates[bpts$breakpoints[i]]
}
break_dates
as.Date(break_dates)
major_violence
major_agree
cf_start
cf_end
VAR(pred_F_neg)
pred_negs <- data.frame(pred_joint_neg, pred_F_neg)
VAR(pred_negs)
breakfactor(pred_F_neg)
breakfactor(pred_F_neg ~ `)
s
)
breakfactor(pred_F_neg ~ 1)
breakfactor(pred_F_neg ~ 1)
causality(pred_negs)
predicted_negs <- data.frame(all_dates, pred_joint_neg, pred_F_neg, pred_govt_neg)
VAR(predicted_negs[,2:3], p = 2, type = "both")
jf_VAR <- VAR(predicted_negs[,2:3], p = 2, type = "both")
serial.test(jf_VAR)
VAR(predicted_negs[,2:3], p = 5, type = "both")
serial.test(VAR(predicted_negs[,2:3], p = 5, type = "both"))
sort(FARC_dates)
base_neg
# Neg emotion: base graph
base_neg = ggplot() +
geom_line(data = FARC_neg, aes(x = FARC_dates, y = V2, color = "FARC statement")) +
geom_jitter() +
#  geom_point(data = joint_neg, aes(x = joint_dates, y = V2, color = "Joint statement")) +
geom_line(data = joint_neg, aes(x = joint_dates, y = V2, color = "Joint statement")) +
geom_line(data = govt_neg, aes(x = govt_dates, y = V2, color = "Govt statement")) +
labs(
x = "Date",
y = "Percent Neg Emotion",
color = "Legend") +
scale_x_date(date_minor_breaks = "1 month",
limits = c(as.Date("2012-06-01", "%Y-%m-%d"), NA))
# Neg emotion and major agreements/violence
neg_major <- base_neg +
ggtitle("Major Events and Percent Negative Emotion Words in Statements") +
geom_vline(data = filter(dates, group == "major_agree"), mapping = aes(xintercept = as.numeric(date), color = "Major agreement"), linetype = 2) +
geom_vline(data = filter(dates, group == "major_viol"), mapping = aes(xintercept = as.numeric(date), color = "Major violence"), linetype = 1)
base_neg
length(all_dates)
as.Date(all_dates)
govt_dates
serial.test(VAR(predicted_negs[,2:3], p = 1, type = "both"))
serial.test(VAR(predicted_negs[,2:3], p = 3, type = "both"))
serial.test(VAR(predicted_negs[,2:3], p = 30, type = "both"))
serial.test(VAR(predicted_negs[,2:3], p = 10, type = "both"))
jf_VAR <- VAR(predicted_negs[,2:3], p = 1, type = "both")
serial.test(V.2, lags.pt = 5) # looks like this model is plagued by serial correlation
serial.test(jf_VAR, lags.pt = 5) # looks like this model is plagued by serial correlation
serial.test(jf_VAR, lags.pt = 1) # looks like this model is plagued by serial correlation
serial.test(jf_VAR, lags.pt = 100) # looks like this model is plagued by serial correlation
grangertest(pred_joint_neg ~ pred_F_neg)
grangertest(pred_joint_neg ~ pred_F_neg, order = 3)
grangertest(pred_joint_neg ~ pred_F_neg, order = 2)
grangertest(pred_joint_neg ~ pred_F_neg, order = 1)
grangertest(pred_joint_neg ~ pred_F_neg, order = 5)
grangertest(pred_joint_neg ~ pred_F_neg, order = 2)
grangertest(pred_F_neg ~ pred_joint_neg, order = 2)
grangertest(pred_F_neg ~ pred_joint_neg, order = 3)
grangertest(pred_F_neg ~ pred_joint_neg, order = 4)
grangertest(pred_F_neg ~ pred_joint_neg, order = 1)
grangertest(d_F_neg ~ d_joint_neg, order = 1)
grangertest(d_joint_neg ~ d_F_neg, order = 1)
grangertest(d_joint_neg ~ d_F_neg, order = 2)
grangertest(d_joint_neg ~ d_F_neg, order = 2)
grangertest(d_joint_neg ~ d_F_neg, order = 3)
grangertest(d_F_neg ~ d_joint_neg, order = 3)
grangertest(d_F_neg ~ d_joint_neg, order = 2)
grangertest(pred_joint_neg ~ pred_F_neg, order = 2)
grangertest(pred_F_neg ~ pred_joint_neg, order = 2)
plot(pred_joint_neg)
plot(pred_F_neg)
plot(pred_govt_neg)
lowess_joint_neg <- lowess(joint_dates, y = joint_neg$V2, f = 2/3, iter = 3, delta = 0.01 * diff(range(joint_dates)))
plot(lowess_joint_neg)
plot(loess_joint_neg)
length(govt_dates)
write.csv(liwc_FARC, file = "liwc_FARC.csv")
class(FARC)
FARC_liwc_results <- []
FARC_liwc_results <- vector("list", 5)
FARC_liwc_results
as.numeric(liwc_FARC$EmoNeg)
class(as.numeric(liwc_FARC$EmoNeg))
data.frame(as.numeric(liwc_FARC$EmoNeg))
LIWC_extractor <- function(df) {
# run liwc
liwc_results <- liwcalike(df$text, spanish_dict)
# get date metadata
df_dates <- dplyr::select(df, date)
dates <- as.Date(df_dates[[1]], "%Y-%m-%d")
# extract the measures we want
neg <- as.numeric(liwc_results$EmoNeg)
pos <- as.numeric(liwc_results$EmoPos)
pp3 <- as.numeric(liwc_results$Ellos)
death <- as.numeric(liwc_results$Muerte)
# make the dataframe
results_df <- cbind(dates, neg, pos, pp3, death)
return(results_df)
}
liwc_extractor(FARC)
Liwc_extractor <- function(df) {
# run liwc
liwc_results <- liwcalike(df$text, spanish_dict)
# get date metadata
df_dates <- dplyr::select(df, date)
dates <- as.Date(df_dates[[1]], "%Y-%m-%d")
# extract the measures we want
neg <- as.numeric(liwc_results$EmoNeg)
pos <- as.numeric(liwc_results$EmoPos)
pp3 <- as.numeric(liwc_results$Ellos)
death <- as.numeric(liwc_results$Muerte)
# make the dataframe
results_df <- cbind(dates, neg, pos, pp3, death)
return(results_df)
}
liwc_extractor(FARC)
liwc_extractor <- function(df) {
# run liwc
liwc_results <- liwcalike(df$text, spanish_dict)
# get date metadata
df_dates <- dplyr::select(df, date)
dates <- as.Date(df_dates[[1]], "%Y-%m-%d")
# extract the measures we want
neg <- as.numeric(liwc_results$EmoNeg)
pos <- as.numeric(liwc_results$EmoPos)
pp3 <- as.numeric(liwc_results$Ellos)
death <- as.numeric(liwc_results$Muerte)
# make the dataframe
results_df <- cbind(dates, neg, pos, pp3, death)
return(results_df)
}
liwc_extractor(FARC)
results_df
FARC_results <- NA
# Function to process a CSV file with LIWC and extract measures of sentiment of interest. Takes two parameter: a dataframe of text, and an empty dataframe for the results
liwc_extractor <- function(df, results_df) {
# run liwc
liwc_results <- liwcalike(df$text, spanish_dict)
# get date metadata
df_dates <- dplyr::select(df, date)
dates <- as.Date(df_dates[[1]], "%Y-%m-%d")
# extract the measures we want
neg <- as.numeric(liwc_results$EmoNeg)
pos <- as.numeric(liwc_results$EmoPos)
pp3 <- as.numeric(liwc_results$Ellos)
death <- as.numeric(liwc_results$Muerte)
# make the dataframe
results_df <- cbind(dates, neg, pos, pp3, death)
}
liwc_extractor(FARC, FARC_results)
FARC_results
# Function to process a CSV file with LIWC and extract measures of sentiment of interest. Takes two parameter: a dataframe of text
liwc_extractor <- function(df) {
# run liwc
liwc_results <- liwcalike(df$text, spanish_dict)
# get date metadata
df_dates <- dplyr::select(df, date)
dates <- as.Date(df_dates[[1]], "%Y-%m-%d")
# extract the measures we want, and lowess them
neg <- as.numeric(liwc_results$EmoNeg)
pos <- as.numeric(liwc_results$EmoPos)
pp3 <- as.numeric(liwc_results$Ellos)
death <- as.numeric(liwc_results$Muerte)
# loess them
neg <- loess(neg ~ as.numeric(dates), control=loess.control(surface="direct"))
pos <- loess(pos ~ as.numeric(dates), control=loess.control(surface="direct"))
pp3 <- loess(pp3 ~ as.numeric(dates), control=loess.control(surface="direct"))
death <- loess(death ~ as.numeric(dates), control=loess.control(surface="direct"))
# make the dataframe
results_df <- cbind(dates, neg, pos, pp3, death)
return(results_df)
}
FARC_results <- liwc_extractor(FARC)
liwc_extractor <- function(df) {
# run liwc
liwc_results <- liwcalike(df$text, spanish_dict)
# get date metadata
df_dates <- dplyr::select(df, date)
dates <- as.Date(df_dates[[1]], "%Y-%m-%d")
# extract the measures we want, and lowess them
neg <- as.numeric(liwc_results$EmoNeg)
pos <- as.numeric(liwc_results$EmoPos)
pp3 <- as.numeric(liwc_results$Ellos)
death <- as.numeric(liwc_results$Muerte)
# loess them
neg <- loess(neg ~ as.numeric(dates), control=loess.control(surface="direct"))$y
pos <- loess(pos ~ as.numeric(dates), control=loess.control(surface="direct"))$y
pp3 <- loess(pp3 ~ as.numeric(dates), control=loess.control(surface="direct"))$y
death <- loess(death ~ as.numeric(dates), control=loess.control(surface="direct"))$y
# make the dataframe
results_df <- cbind(dates, neg, pos, pp3, death)
return(results_df)
}
FARC_results <- liwc_extractor(FARC)
View(FARC_results)
View(FARC_results)
as.Date(15120, origin = "1970-01-01")
FARC_neg
