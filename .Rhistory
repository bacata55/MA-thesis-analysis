FARC_breaks <- break_finder(FARC_results)
break_finder <- function(df) {
# make a list to contain the dates
all_breaks <- vector("list", length(df) - 1)
# get breakpoints
for (i in 2:length(df)) {
all_breaks[i-1] <- list(breakpoints(df[[i]] ~ 1)$breakpoints)
}
return(all_breaks)
}
FARC_breaks <- break_finder(FARC_results)
FARC_breaks
length(FARC_breaks)
FARC_breaks[1]
break_finder <- function(df) {
# make a list to contain the dates
break_obs <- vector("list", length(df) - 1)
# get breakpoints
for (i in 2:length(df)) {
break_obs[i-1] <- list(breakpoints(df[[i]] ~ 1)$breakpoints)
for (j in 1:length(break_obs)) {
obs <- unlist(break_obs[j])
dates <- list(as.Date(obs, origin = "1970-01-01"))
break_obs[j] <- dates
}
}
return(all_breaks)
}
FARC_breaks <- break_finder(FARC_results)
unlist(FARC_breaks[1])
unlist(FARC_breaks[1])[1]
length(unlist(FARC_breaks[1]))
FARC_results$date[`]
a
}
)
FARC_breaks[1]
FARC_breaks[]
stop
unlist(FARC_breaks[1])
unlist(FARC_breaks[1])[2]
FARC_results$date[unlist(FARC_breaks[1])[2]]
FARC_results$date[FARC_breaks]
break_finder <- function(df) {
# make a list to contain the dates
break_obs <- vector("list", length(df) - 1)
all_breaks <- vector("list", length(df) -1)
# get breakpoints
for (i in 2:length(df)) {
break_obs[i-1] <- list(breakpoints(df[[i]] ~ 1)$breakpoints)
for (j in 1:length(break_obs)) {
obs <- unlist(break_obs[j])
for (k in 1:length(obs)) {
breakdate <- df$date[obs[k]]
all_breaks[j].append(breakdate)
}
}
}
return(all_breaks)
}
FARC_breaks <- break_finder(FARC_results)
break_finder <- function(df) {
# make a list to contain the dates
break_obs <- vector("list", length(df) - 1)
all_breaks <- vector("list", length(df) -1)
# get breakpoints
for (i in 2:length(df)) {
break_obs[i-1] <- list(breakpoints(df[[i]] ~ 1)$breakpoints)
}
}
return(all_breaks)
}
FARC_breaks <- break_finder(FARC_results)
FARC_breaks
foo <- vector("list", 0)
foo
foo.append(list(breakpoints(FARC_results$neg ~ 1)$breakpoints))
append(foo, list(breakpoints(FARC_results$neg ~ 1)$breakpoints))
append(foo, list(breakpoints(FARC_results$pos ~ 1)$breakpoints))
FARC_results[[3]]
break_finder <- function(df) {
# make a list to contain the dates
break_obs <- vector("list", length(df) - 1)
# get breakpoints
for (i in 2:length(df)) {
break_obs[i - 1] <- (list(breakpoints(df[[i]] ~ 1)$breakpoints))
}
return(break_obs)
}
FARC_breaks <- break_finder(FARC_results)
FARC_breaks
length(FARC_breaks[1])
length(FARC_breaks[2])
FARC_breaks[2]
FARC_breaks[3]
# Function to convert break obs to dates. Takes two arguments: a list of lists (shudder), and an original df
get_breakdate <- function(listoflists, df) {
dates_list <- vector("list", 0)
for (i in 1:length(listoflists)) {
if (!is.na(listoflists[i])) {
unlisted_obs <- unlist(listoflists[i])
for (j in 1:length(unlisted_obs)) {
current_date <- df$date[unlisted_obs[j]]
dates_list <- append(dates_list, current_date)
return(dates_list)
}
listoflists[i] <- dates_list
dates_list <- vector("list", 0)
}
}
return(listoflists)
}
FARC_breaks <- get_breakdate(FARC_breaks)
FARC_breaks <- get_breakdate(FARC_breaks, FARC_results)
FARC_breaks
get_breakdate <- function(listoflists, df) {
dates_list <- vector("list", 0)
# for each list of break obs
for (i in 1:length(listoflists)) {
# if it's not empty
if (!is.na(listoflists[i])) {
# get the observations
unlisted_obs <- unlist(listoflists[i])
# and then for each of the observations
for (j in 1:length(unlisted_obs)) {
# get the date from the dataframe and append it to the dates list
current_date <- df$date[unlisted_obs[j]]
dates_list <- append(dates_list, current_date)
}
listoflists[i] <- dates_list
dates_list <- vector("list", 0)
}
}
return(listoflists)
}
FARC_breaks <- break_finder(FARC_results)
FARC_breaks <- get_breakdate(FARC_breaks, FARC_results)
get_breakdate <- function(listoflists, df) {
dates_list <- vector("list", 0)
# for each list of break obs
for (i in 1:length(listoflists)) {
# if it's not empty
if (!is.na(listoflists[i])) {
# get the observations
unlisted_obs <- unlist(listoflists[i])
# and then for each of the observations
for (j in 1:length(unlisted_obs)) {
# get the date from the dataframe and append it to the dates list
current_date <- df$date[unlisted_obs[j]]
dates_list <- append(dates_list, current_date)
return(dates_list)
}
listoflists[i] <- list(dates_list)
dates_list <- vector("list", 0)
}
}
return(listoflists)
}
FARC_breaks <- break_finder(FARC_results)
FARC_breaks <- get_breakdate(FARC_breaks, FARC_results)
get_breakdate <- function(listoflists, df) {
dates_list <- vector("list", 0)
# for each list of break obs
for (i in 1:length(listoflists)) {
# if it's not empty
if (!is.na(listoflists[i])) {
# get the observations
unlisted_obs <- unlist(listoflists[i])
# and then for each of the observations
for (j in 1:length(unlisted_obs)) {
# get the date from the dataframe and append it to the dates list
current_date <- df$date[unlisted_obs[j]]
dates_list <- append(dates_list, current_date)
}
return(dates_list)
listoflists[i] <- list(dates_list)
dates_list <- vector("list", 0)
}
}
return(listoflists)
}
FARC_breaks <- break_finder(FARC_results)
FARC_breaks <- get_breakdate(FARC_breaks, FARC_results)
FARC_breaks
get_breakdate <- function(listoflists, df) {
# for each list of break obs
for (i in 1:length(listoflists)) {
dates_list <- vector("list", 0)
# if it's not empty
if (!is.na(listoflists[i])) {
# get the observations
unlisted_obs <- unlist(listoflists[i])
# and then for each of the observations
for (j in 1:length(unlisted_obs)) {
# get the date from the dataframe and append it to the dates list
current_date <- df$date[unlisted_obs[j]]
dates_list <- append(dates_list, current_date)
}
return(dates_list)
listoflists[i] <- list(dates_list)
}
}
return(listoflists)
}
FARC_breaks <- break_finder(FARC_results)
FARC_breaks <- get_breakdate(FARC_breaks, FARC_results)
FARC_breaks
class(FARC_breaks[1])
class(FARC_breaks[[1]])
FARC_breaks[1]
govt_breaks[1]
class(govt_breaks[1])
append(govt_breaks[1], 1)
govt_breaks[2]
govt_breaks[[1]]
govt_breaks[[2]]
govt_breaks[1,1]
unlist(govt_breaks)
get_breakdate <- function(listoflists, df) {
# for each list of break obs
for (i in 1:length(listoflists)) {
# if it's not empty
if (!is.na(listoflists[i])) {
# get the observations
unlisted_obs <- unlist(listoflists[i])
dates_list <- vector("list", 0)
# and then for each of the observations
for (j in 1:length(unlisted_obs)) {
# get the date from the dataframe and add it to the list
current_date <- df$date[unlisted_obs[j]]
dates_list <- append(dates_list, current_date)
return(dates_list)
}
listoflists[i] <- dates_list
}
}
return(listoflists)
}
FARC_breaks <- break_finder(FARC_results)
FARC_breaks <- get_breakdate(FARC_breaks, FARC_results)
FARC_breaks
get_breakdate <- function(listoflists, df) {
# for each list of break obs
for (i in 1:length(listoflists)) {
# if it's not empty
if (!is.na(listoflists[i])) {
# get the observations
unlisted_obs <- unlist(listoflists[i])
dates_list <- vector("list", 0)
# and then for each of the observations
for (j in 1:length(unlisted_obs)) {
# get the date from the dataframe and add it to the list
current_date <- df$date[unlisted_obs[j]]
dates_list <- append(dates_list, current_date)
return(dates_list)
}
listoflists[i] <- list(dates_list)
}
}
return(listoflists)
}
FARC_breaks <- break_finder(FARC_results)
FARC_breaks <- get_breakdate(FARC_breaks, FARC_results)
FARC_breaks
get_breakdate <- function(listoflists, df) {
# for each list of break obs
for (i in 1:length(listoflists)) {
# if it's not empty
if (!is.na(listoflists[i])) {
# get the observations
unlisted_obs <- unlist(listoflists[i])
dates_list <- vector("list", 0)
# and then for each of the observations
for (j in 1:length(unlisted_obs)) {
# get the date from the dataframe and add it to the list
current_date <- df$date[unlisted_obs[j]]
dates_list <- append(dates_list, current_date)
}
listoflists[i] <- list(dates_list)
}
}
return(listoflists)
}
FARC_breaks <- break_finder(FARC_results)
FARC_breaks <- get_breakdate(FARC_breaks, FARC_results)
FARC_breaks
govt_breaks <- get_breakdate(break_finder(govt_results), govt_results)
joint_breaks <- get_breakdate(break_finder(joint_results), joint_results)
govt_breaks
joint_breaks
breakpoints(FARC_results, format.times = TRUE)
breakpoints(FARC_results$neg, format.times = TRUE)
breakpoints(FARC_results$neg ~ 1, format.times = TRUE)
breakpoints(FARC_results$neg ~ 1, breaks = 10)
breakpoints(FARC_results$neg ~ 1, breaks = 5)
breakpoints(FARC_results$neg ~ 1, h = 0.01)
breakpoints(FARC_results$neg ~ 1, h = 0.1)
breakpoints(FARC_results$neg ~ 1, h = 0.05)
breakpoints(FARC_results$neg ~ 1, h = 0.02)
breakpoints(FARC_results$neg ~ 1, h = 0.01)
plot(FARC_breaks)
plot(FARC_breaks, 1)
all_dates <- unique(sort(as.numeric(c(FARC_results$date, joint_results$date, govt_results$date))))
all_dates
get_liwc_est <- function(df) {
# run liwc
liwc_results <- liwcalike(df$text, spanish_dict)
# get date metadata
df_dates <- dplyr::select(df, date)
date <- as.Date(df_dates[[1]], "%Y-%m-%d")
# extract the measures we want, and lowess them
neg <- as.numeric(liwc_results$EmoNeg)
pos <- as.numeric(liwc_results$EmoPos)
pp3 <- as.numeric(liwc_results$Ellos)
death <- as.numeric(liwc_results$Muerte)
# make the dataframe
results_df <- data.frame(cbind(date, neg, pos, pp3, death))
results_df$date <- as.Date(date, "%Y-%m-%d")
return(results_df)
}
# Function to take a df of raw LIWC values and return loessed values
liwc_loess <- function(liwc_results) {
neg <- loess(liwc_results$neg ~ as.numeric(liwc_results$date), control=loess.control(surface="direct"))$y
pos <- loess(liwc_results$pos ~ as.numeric(liwc_results$date), control=loess.control(surface="direct"))$y
pp3 <- loess(liwc_results$pp3 ~ as.numeric(liwc_results$date), control=loess.control(surface="direct"))$y
death <- loess(liwc_results$death ~ as.numeric(liwc_results$date), control=loess.control(surface="direct"))$y
# or lowess
# # neg <- lowess(dates, y = neg, f = 2/3, iter = 3, delta = 0.01 * diff(range(dates)))
# make the dataframe
results_df <- data.frame(cbind(date, neg, pos, pp3, death))
results_df$date <- as.Date(date, "%Y-%m-%d")
return(results_df)
}
FARC_results <- liwc_loess(get_liwc_est(FARC))
FARC_results <- get_liwc_est(FARC)
View(FARC_results)
liwc_loess <- function(liwc_results) {
neg <- loess(liwc_results$neg ~ as.numeric(liwc_results$date), control=loess.control(surface="direct"))$y
pos <- loess(liwc_results$pos ~ as.numeric(liwc_results$date), control=loess.control(surface="direct"))$y
pp3 <- loess(liwc_results$pp3 ~ as.numeric(liwc_results$date), control=loess.control(surface="direct"))$y
death <- loess(liwc_results$death ~ as.numeric(liwc_results$date), control=loess.control(surface="direct"))$y
# or lowess
# # neg <- lowess(dates, y = neg, f = 2/3, iter = 3, delta = 0.01 * diff(range(dates)))
# make the dataframe
results_df <- data.frame(cbind(date, neg, pos, pp3, death))
results_df$date <- as.Date(date, "%Y-%m-%d")
return(results_df)
}
FARC_results <- liwc_loess(FARC_raw)
as.numeric(FARC_results$date)
neg <- loess(FARC_results$neg ~ as.numeric(FARC_results$date), control=loess.control(surface="direct"))$y
neg
liwc_loess <- function(liwc_results) {
neg <- loess(liwc_results$neg ~ as.numeric(liwc_results$date), control=loess.control(surface="direct"))$y
pos <- loess(liwc_results$pos ~ as.numeric(liwc_results$date), control=loess.control(surface="direct"))$y
pp3 <- loess(liwc_results$pp3 ~ as.numeric(liwc_results$date), control=loess.control(surface="direct"))$y
death <- loess(liwc_results$death ~ as.numeric(liwc_results$date), control=loess.control(surface="direct"))$y
# or lowess
# # neg <- lowess(dates, y = neg, f = 2/3, iter = 3, delta = 0.01 * diff(range(dates)))
# make the dataframe
}
FARC_results <- liwc_loess(FARC_raw)
FARC_raw <- get_liwc_est(FARC)
FARC_raw <- get_liwc_est(FARC)
# loess it
FARC_results <- liwc_loess(FARC_raw)
View(FARC_raw)
FARC_results
View(FARC_raw)
# Function to get raw LIWC measures
liwc_extractor <- function(df) {
# run liwc
liwc_results <- liwcalike(df$text, spanish_dict)
# get date metadata
df_dates <- dplyr::select(df, date)
date <- as.Date(df_dates[[1]], "%Y-%m-%d")
# extract the measures we want, and lowess them
neg <- as.numeric(liwc_results$EmoNeg)
pos <- as.numeric(liwc_results$EmoPos)
pp3 <- as.numeric(liwc_results$Ellos)
death <- as.numeric(liwc_results$Muerte)
# make the dataframe
results_df <- data.frame(cbind(date, neg, pos, pp3, death))
results_df$date <- as.Date(date, "%Y-%m-%d")
return(results_df)
}
# Function to take a df of raw LIWC values and return loessed values
liwc_loess <- function(liwc_results) {
neg <- loess(liwc_results$neg ~ as.numeric(liwc_results$date), control=loess.control(surface="direct"))$y
pos <- loess(liwc_results$pos ~ as.numeric(liwc_results$date), control=loess.control(surface="direct"))$y
pp3 <- loess(liwc_results$pp3 ~ as.numeric(liwc_results$date), control=loess.control(surface="direct"))$y
death <- loess(liwc_results$death ~ as.numeric(liwc_results$date), control=loess.control(surface="direct"))$y
# or lowess
# # neg <- lowess(dates, y = neg, f = 2/3, iter = 3, delta = 0.01 * diff(range(dates)))
# make the dataframe
results_df <- data.frame(cbind(date, neg, pos, pp3, death))
results_df$date <- as.Date(date, origin = "1970-01-01")
return(results_df)
}
FARC_results <- liwc_loess(FARC_raw)
liwc_loess <- function(liwc_results) {
neg <- loess(liwc_results$neg ~ as.numeric(liwc_results$date), control=loess.control(surface="direct"))$y
pos <- loess(liwc_results$pos ~ as.numeric(liwc_results$date), control=loess.control(surface="direct"))$y
pp3 <- loess(liwc_results$pp3 ~ as.numeric(liwc_results$date), control=loess.control(surface="direct"))$y
death <- loess(liwc_results$death ~ as.numeric(liwc_results$date), control=loess.control(surface="direct"))$y
# or lowess
# # neg <- lowess(dates, y = neg, f = 2/3, iter = 3, delta = 0.01 * diff(range(dates)))
# make the dataframe
results_df <- data.frame(cbind(date, neg, pos, pp3, death))
return(results_df)
}
FARC_results <- liwc_loess(FARC_raw)
FARC_results <- liwc_loess(FARC_raw)
liwc_loess <- function(liwc_results) {
neg <- loess(liwc_results$neg ~ as.numeric(liwc_results$date), control=loess.control(surface="direct"))$y
pos <- loess(liwc_results$pos ~ as.numeric(liwc_results$date), control=loess.control(surface="direct"))$y
pp3 <- loess(liwc_results$pp3 ~ as.numeric(liwc_results$date), control=loess.control(surface="direct"))$y
death <- loess(liwc_results$death ~ as.numeric(liwc_results$date), control=loess.control(surface="direct"))$y
# or lowess
# # neg <- lowess(dates, y = neg, f = 2/3, iter = 3, delta = 0.01 * diff(range(dates)))
# make the dataframe
results_df <- data.frame(cbind(date, neg, pos, pp3, death))
return(results_df)
}
FARC_results <- liwc_loess(FARC_raw)
liwc_loess <- function(liwc_results) {
neg <- loess(liwc_results$neg ~ as.numeric(liwc_results$date), control=loess.control(surface="direct"))$y
pos <- loess(liwc_results$pos ~ as.numeric(liwc_results$date), control=loess.control(surface="direct"))$y
pp3 <- loess(liwc_results$pp3 ~ as.numeric(liwc_results$date), control=loess.control(surface="direct"))$y
death <- loess(liwc_results$death ~ as.numeric(liwc_results$date), control=loess.control(surface="direct"))$y
# or lowess
# # neg <- lowess(dates, y = neg, f = 2/3, iter = 3, delta = 0.01 * diff(range(dates)))
# make the dataframe
results_df <- data.frame(cbind(date, neg, pos, pp3, death))
results_df$date <- as.Date(date, origin = "1970-01-01")
return(results_df)
}
FARC_results <- liwc_loess(FARC_raw)
View(FARC_raw)
FARC_raw$date
liwc_loess <- function(liwc_results) {
neg <- loess(liwc_results$neg ~ as.numeric(liwc_results$date), control=loess.control(surface="direct"))$y
pos <- loess(liwc_results$pos ~ as.numeric(liwc_results$date), control=loess.control(surface="direct"))$y
pp3 <- loess(liwc_results$pp3 ~ as.numeric(liwc_results$date), control=loess.control(surface="direct"))$y
death <- loess(liwc_results$death ~ as.numeric(liwc_results$date), control=loess.control(surface="direct"))$y
# or lowess
# # neg <- lowess(dates, y = neg, f = 2/3, iter = 3, delta = 0.01 * diff(range(dates)))
# make the dataframe
results_df <- data.frame(cbind(date, neg, pos, pp3, death))
return(results_df)
}
FARC_results <- liwc_loess(FARC_raw)
View(FARC_results)
View(FARC_results)
liwc_loess <- function(liwc_results) {
neg <- loess(liwc_results$neg ~ as.numeric(liwc_results$date), control=loess.control(surface="direct"))$y
pos <- loess(liwc_results$pos ~ as.numeric(liwc_results$date), control=loess.control(surface="direct"))$y
pp3 <- loess(liwc_results$pp3 ~ as.numeric(liwc_results$date), control=loess.control(surface="direct"))$y
death <- loess(liwc_results$death ~ as.numeric(liwc_results$date), control=loess.control(surface="direct"))$y
# or lowess
# # neg <- lowess(dates, y = neg, f = 2/3, iter = 3, delta = 0.01 * diff(range(dates)))
# make the dataframe
date <- liwc_results$date
results_df <- data.frame(cbind(date, neg, pos, pp3, death))
return(results_df)
}
FARC_results <- liwc_loess(FARC_raw)
View(FARC_results)
liwc_loess <- function(liwc_results) {
neg <- loess(liwc_results$neg ~ as.numeric(liwc_results$date), control=loess.control(surface="direct"))$y
pos <- loess(liwc_results$pos ~ as.numeric(liwc_results$date), control=loess.control(surface="direct"))$y
pp3 <- loess(liwc_results$pp3 ~ as.numeric(liwc_results$date), control=loess.control(surface="direct"))$y
death <- loess(liwc_results$death ~ as.numeric(liwc_results$date), control=loess.control(surface="direct"))$y
# or lowess
# # neg <- lowess(dates, y = neg, f = 2/3, iter = 3, delta = 0.01 * diff(range(dates)))
# make the dataframe
date <- as.Date(liwc_results$date, origin = "1970-01-01")
results_df <- data.frame(cbind(date, neg, pos, pp3, death))
return(results_df)
}
}
# Function to take a df of raw LIWC values and return loessed values
# Function to take a df of raw LIWC values and return loessed values
liwc_loess <- function(liwc_results) {
neg <- loess(liwc_results$neg ~ as.numeric(liwc_results$date), control=loess.control(surface="direct"))$y
pos <- loess(liwc_results$pos ~ as.numeric(liwc_results$date), control=loess.control(surface="direct"))$y
pp3 <- loess(liwc_results$pp3 ~ as.numeric(liwc_results$date), control=loess.control(surface="direct"))$y
death <- loess(liwc_results$death ~ as.numeric(liwc_results$date), control=loess.control(surface="direct"))$y
# or lowess
# # neg <- lowess(dates, y = neg, f = 2/3, iter = 3, delta = 0.01 * diff(range(dates)))
# make the dataframe
date <- as.Date(liwc_results$date, origin = "1970-01-01")
results_df <- data.frame(cbind(date, neg, pos, pp3, death))
return(results_df)
}
FARC_results <- liwc_loess(FARC_raw)
View(FARC_results)
liwc_loess <- function(liwc_results) {
neg <- loess(liwc_results$neg ~ as.numeric(liwc_results$date), control=loess.control(surface="direct"))$y
pos <- loess(liwc_results$pos ~ as.numeric(liwc_results$date), control=loess.control(surface="direct"))$y
pp3 <- loess(liwc_results$pp3 ~ as.numeric(liwc_results$date), control=loess.control(surface="direct"))$y
death <- loess(liwc_results$death ~ as.numeric(liwc_results$date), control=loess.control(surface="direct"))$y
# or lowess
# # neg <- lowess(dates, y = neg, f = 2/3, iter = 3, delta = 0.01 * diff(range(dates)))
# make the dataframe
date <- as.Date(liwc_results$date, origin = "1970-01-01")
results_df <- data.frame(cbind(date, neg, pos, pp3, death))
results_df$date <- date
return(results_df)
}
FARC_results <- liwc_loess(FARC_raw)
View(FARC_results)
